
  "MamtaMedicalConnection": {
    "ConnectionString": "mongodb://localhost:27017",
    "DatabaseName": "MamtaMedical"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "MamtaMedical": "Data Source = localhost,1433; Initial Catalog = Mamtamedicaldb; User Id=sa;Password=kali"
  }
}

//Create Connection model
  public class MamtaMedicalConnection
    {
        public string ConnectionString { get; set; }
        public string DatabaseName { get; set; }
    }

//program.cs
builder.Services.AddSingleton<IMongoDatabase>(c =>
{
    var mongosetting = builder.Configuration.GetSection("MamtaMedicalConnection").Get<MamtaMedicalConnection>();
    var client = new MongoClient(mongosetting.ConnectionString);
    return client.GetDatabase(mongosetting.DatabaseName);
});

//Repository

 private readonly IMongoCollection<MongoCategory> mongo;
        private readonly IMongoCollection<MongoProducts> Product;
        public CategoryAction(IMongoDatabase database)
        {

            this.mongo = database.GetCollection<MongoCategory>("Category");
            this.Product = database.GetCollection<MongoProducts>("Products");
        }
//insert into db
    public void AddCategory(CategoryModel m)
        {
            MongoCategory category = new MongoCategory();
            category._id = m.Category_id;
            category.Category_id = m.Category_id;
            category.Category_name = m.Category_name;   
            category.Image_name = m.Image_name;
            category.Image = m.Category_id;
            category.Description=m.Description;
            mongo.InsertOne(category);
           
        }
// 2nd option 

  "MamtaMedicalConnection": {
    "ConnectionString": "mongodb://localhost:27017",
    "DatabaseName": "MamtaMedical"
  },

//Create Connection model
  public class MamtaMedicalConnection
    {
        public string ConnectionString { get; set; }
        public string DatabaseName { get; set; }
    }

//program.cs
builder.Services.AddSingleton<IMongoDatabase>(c =>
{
    var mongosetting = builder.Configuration.GetSection("MamtaMedicalConnection").Get<MamtaMedicalConnection>();
    var client = new MongoClient(mongosetting.ConnectionString);
    return client.GetDatabase(mongosetting.DatabaseName);
});

  private readonly IMongoCollection<MongoBrands> _Brands;
        private readonly IMongoCollection<MongoProducts> _Product;
        private readonly IMongoCollection<MongoCategory> _Category;
        private readonly IMongoCollection<MongoSubcategory> _Subcategory;
        public MongoContext(IMongoDatabase database)
        {

            this._Brands = database.GetCollection<MongoBrands>("Brands");
            this._Product = database.GetCollection<MongoProducts>("Products");
            this._Category = database.GetCollection<MongoCategory>("Category");
            this._Subcategory = database.GetCollection<MongoSubcategory>("Subcategory");
        }
        public IMongoCollection<MongoBrands> Brands() { return this._Brands; }

        public IMongoCollection<MongoProducts> Products() { return _Product; }
    
        public IMongoCollection<MongoCategory> Category() { return _Category; }

        public IMongoCollection<MongoSubcategory> Subcategory() { return _Subcategory; }

builder.Services.AddSingleton<MongoContext>();


private readonly MongoContext context;
        public BrandAction(IMongoDatabase database, MongoContext context)
        {

            this.context = context;
        }

//use this 
this.context.Brands().InsertOne(brand);
